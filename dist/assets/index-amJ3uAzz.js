(function(){const c=document.createElement("link").relList;if(c&&c.supports&&c.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&t(l)}).observe(document,{childList:!0,subtree:!0});function r(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function t(e){if(e.ep)return;e.ep=!0;const o=r(e);fetch(e.href,o)}})();const d=document.getElementById("roomId"),I=document.getElementById("joinBtn"),f=document.getElementById("startBtn"),u=document.getElementById("voiceSelect"),m=document.getElementById("instrumentSelect"),p=document.getElementById("videoToggle"),g=document.getElementById("localVideo"),v=document.getElementById("localVoice"),y=document.getElementById("localInstrument");let i,a,s;async function E(){try{const n=await navigator.mediaDevices.enumerateDevices();u.innerHTML="",m.innerHTML="",n.filter(r=>r.kind==="audioinput").forEach((r,t)=>{const e=document.createElement("option");e.value=r.deviceId,e.text=r.label||`Microphone ${t+1}`,u.appendChild(e);const o=document.createElement("option");o.value=r.deviceId,o.text=r.label||`Microphone ${t+1}`,m.appendChild(o)})}catch(n){console.error("Error populating devices:",n)}}d.addEventListener("input",()=>{f.disabled=!d.value.trim()});I.addEventListener("click",()=>{if(!d.value.trim())return alert("Please enter a Room ID");f.disabled=!1});f.addEventListener("click",async()=>{try{i&&i.getTracks().forEach(t=>t.stop()),a&&a.getTracks().forEach(t=>t.stop()),s&&s.getTracks().forEach(t=>t.stop());const n=u.value||void 0,c=m.value||void 0,r={audio:n?{deviceId:{exact:n}}:!0,video:p.checked};if(i=await navigator.mediaDevices.getUserMedia(r),p.checked&&(g.srcObject=i,await g.play()),n){const t=i.getAudioTracks()[0];a=new MediaStream([t]),v.srcObject=a,await v.play()}if(c){const t=i.getAudioTracks()[0];s=new MediaStream([t.clone()]),y.srcObject=s,await y.play()}alert("Jam started! Your media is live.")}catch(n){console.error("Error starting jam:",n),alert("Error starting jam. Check console for details.")}});E();
